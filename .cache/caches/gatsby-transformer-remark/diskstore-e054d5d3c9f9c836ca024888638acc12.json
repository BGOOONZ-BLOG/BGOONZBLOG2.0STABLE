{"expireTime":9007200909776266000,"key":"transformer-remark-markdown-ast-b9a57b90c586156106d10223b7dac31c-gatsby-remark-prismjs-copy-buttongatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"The simplest way to read a file in Node.js is to use the ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":58,"offset":58},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">fs.readFile()</code>","position":{"start":{"line":2,"column":58,"offset":58},"end":{"line":2,"column":73,"offset":73},"indent":[]}},{"type":"text","value":" method, passing it the file path, encoding and a callback function that will be called with the file data (and the error):","position":{"start":{"line":2,"column":73,"offset":73},"end":{"line":2,"column":196,"offset":196},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":196,"offset":196},"indent":[]}},{"type":"html","value":"\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          "},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nfs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/Users/joe/test.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf8'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":4,"column":1,"offset":198},"end":{"line":14,"column":4,"offset":386},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Alternatively, you can use the synchronous version ","position":{"start":{"line":16,"column":1,"offset":388},"end":{"line":16,"column":52,"offset":439},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">fs.readFileSync()</code>","position":{"start":{"line":16,"column":52,"offset":439},"end":{"line":16,"column":71,"offset":458},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":16,"column":71,"offset":458},"end":{"line":16,"column":72,"offset":459},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":388},"end":{"line":16,"column":72,"offset":459},"indent":[]}},{"type":"html","value":"\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          "},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/Users/joe/test.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":18,"column":1,"offset":461},"end":{"line":27,"column":4,"offset":633},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Both ","position":{"start":{"line":29,"column":1,"offset":635},"end":{"line":29,"column":6,"offset":640},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">fs.readFile()</code>","position":{"start":{"line":29,"column":6,"offset":640},"end":{"line":29,"column":21,"offset":655},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":29,"column":21,"offset":655},"end":{"line":29,"column":26,"offset":660},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">fs.readFileSync()</code>","position":{"start":{"line":29,"column":26,"offset":660},"end":{"line":29,"column":45,"offset":679},"indent":[]}},{"type":"text","value":" read the full content of the file in memory before returning the data.","position":{"start":{"line":29,"column":45,"offset":679},"end":{"line":29,"column":116,"offset":750},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":635},"end":{"line":29,"column":116,"offset":750},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This means that big files are going to have a major impact on your memory consumption and speed of execution of the program.","position":{"start":{"line":31,"column":1,"offset":752},"end":{"line":31,"column":125,"offset":876},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":752},"end":{"line":31,"column":125,"offset":876},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In this case, a better option is to read the file content using streams.","position":{"start":{"line":33,"column":1,"offset":878},"end":{"line":33,"column":73,"offset":950},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":878},"end":{"line":33,"column":73,"offset":950},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":34,"column":1,"offset":951}}}}