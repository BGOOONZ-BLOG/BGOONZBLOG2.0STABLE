{"expireTime":9007200883280474000,"key":"transformer-remark-markdown-ast-735906687c6933c582260e4fa95bc8de--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Go To Sitemap: ","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":18,"offset":18},"indent":[]}},{"type":"link","title":null,"url":"./docs/sitemap/","children":[{"type":"text","value":"Go Now -->","position":{"start":{"line":2,"column":19,"offset":19},"end":{"line":2,"column":29,"offset":29},"indent":[]}}],"position":{"start":{"line":2,"column":18,"offset":18},"end":{"line":2,"column":47,"offset":47},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":47,"offset":47},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":4,"column":1,"offset":49},"end":{"line":4,"column":4,"offset":52},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Actual Docs:","position":{"start":{"line":6,"column":3,"offset":56},"end":{"line":6,"column":15,"offset":68},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":54},"end":{"line":6,"column":15,"offset":68},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":8,"column":1,"offset":70},"end":{"line":8,"column":5,"offset":74},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":10,"column":1,"offset":76},"end":{"line":10,"column":5,"offset":80},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":12,"column":1,"offset":82},"end":{"line":12,"column":5,"offset":86},"indent":[]}},{"type":"html","value":"<br>\n<h1>  Docs</h1>\n<br>","position":{"start":{"line":14,"column":1,"offset":88},"end":{"line":16,"column":5,"offset":113},"indent":[1,1]}},{"type":"html","value":"<iframe class=\"inner\" src=\"https://docs42.netlify.app/#C:/MY-WEB-DEV/__NEW_GIT/DOCS/docs-collection\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>","position":{"start":{"line":18,"column":1,"offset":115},"end":{"line":20,"column":82,"offset":525},"indent":[1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":1,"offset":527},"end":{"line":22,"column":5,"offset":531},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":24,"column":1,"offset":533},"end":{"line":24,"column":4,"offset":536},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Doc Websites & Repos","position":{"start":{"line":26,"column":4,"offset":541},"end":{"line":26,"column":24,"offset":561},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":538},"end":{"line":26,"column":24,"offset":561},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/PYTHON_PRAC","children":[{"type":"text","value":"Python Practice","position":{"start":{"line":28,"column":6,"offset":568},"end":{"line":28,"column":21,"offset":583},"indent":[]}}],"position":{"start":{"line":28,"column":5,"offset":567},"end":{"line":28,"column":61,"offset":623},"indent":[]}}],"position":{"start":{"line":28,"column":5,"offset":567},"end":{"line":28,"column":61,"offset":623},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":563},"end":{"line":28,"column":61,"offset":623},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://lambda-resources.netlify.app/","children":[{"type":"text","value":"Lambda Bootcamp Website","position":{"start":{"line":29,"column":6,"offset":629},"end":{"line":29,"column":29,"offset":652},"indent":[]}}],"position":{"start":{"line":29,"column":5,"offset":628},"end":{"line":29,"column":69,"offset":692},"indent":[]}}],"position":{"start":{"line":29,"column":5,"offset":628},"end":{"line":29,"column":69,"offset":692},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":624},"end":{"line":29,"column":69,"offset":692},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/React_Notes_V3","children":[{"type":"text","value":"React Notes","position":{"start":{"line":30,"column":6,"offset":698},"end":{"line":30,"column":17,"offset":709},"indent":[]}}],"position":{"start":{"line":30,"column":5,"offset":697},"end":{"line":30,"column":60,"offset":752},"indent":[]}}],"position":{"start":{"line":30,"column":5,"offset":697},"end":{"line":30,"column":60,"offset":752},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":693},"end":{"line":30,"column":60,"offset":752},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Project-Showcase","children":[{"type":"text","value":"Project Showcase","position":{"start":{"line":31,"column":6,"offset":758},"end":{"line":31,"column":22,"offset":774},"indent":[]}}],"position":{"start":{"line":31,"column":5,"offset":757},"end":{"line":31,"column":67,"offset":819},"indent":[]}}],"position":{"start":{"line":31,"column":5,"offset":757},"end":{"line":31,"column":67,"offset":819},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":753},"end":{"line":31,"column":67,"offset":819},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/DS-ALGO-OFFICIAL","children":[{"type":"text","value":"Data Structures & Algorithms","position":{"start":{"line":32,"column":6,"offset":825},"end":{"line":32,"column":34,"offset":853},"indent":[]}}],"position":{"start":{"line":32,"column":5,"offset":824},"end":{"line":32,"column":79,"offset":898},"indent":[]}}],"position":{"start":{"line":32,"column":5,"offset":824},"end":{"line":32,"column":79,"offset":898},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":820},"end":{"line":32,"column":79,"offset":898},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Lambda-Resource-Static-Assets","children":[{"type":"text","value":"Lambda Site Static Content Server","position":{"start":{"line":33,"column":6,"offset":904},"end":{"line":33,"column":39,"offset":937},"indent":[]}}],"position":{"start":{"line":33,"column":5,"offset":903},"end":{"line":33,"column":97,"offset":995},"indent":[]}}],"position":{"start":{"line":33,"column":5,"offset":903},"end":{"line":33,"column":97,"offset":995},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":899},"end":{"line":33,"column":97,"offset":995},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/mini-project-showcase","children":[{"type":"text","value":"Mini-Project Showcase","position":{"start":{"line":34,"column":6,"offset":1001},"end":{"line":34,"column":27,"offset":1022},"indent":[]}}],"position":{"start":{"line":34,"column":5,"offset":1000},"end":{"line":34,"column":77,"offset":1072},"indent":[]}}],"position":{"start":{"line":34,"column":5,"offset":1000},"end":{"line":34,"column":77,"offset":1072},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":996},"end":{"line":34,"column":77,"offset":1072},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Useful-Snippets-js","children":[{"type":"text","value":"Useful Snippets","position":{"start":{"line":35,"column":6,"offset":1078},"end":{"line":35,"column":21,"offset":1093},"indent":[]}}],"position":{"start":{"line":35,"column":5,"offset":1077},"end":{"line":35,"column":68,"offset":1140},"indent":[]}}],"position":{"start":{"line":35,"column":5,"offset":1077},"end":{"line":35,"column":68,"offset":1140},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1073},"end":{"line":35,"column":68,"offset":1140},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Markdown-Templates","children":[{"type":"text","value":"Markdown Templates","position":{"start":{"line":36,"column":6,"offset":1146},"end":{"line":36,"column":24,"offset":1164},"indent":[]}}],"position":{"start":{"line":36,"column":5,"offset":1145},"end":{"line":36,"column":71,"offset":1211},"indent":[]}}],"position":{"start":{"line":36,"column":5,"offset":1145},"end":{"line":36,"column":71,"offset":1211},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1141},"end":{"line":36,"column":71,"offset":1211},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/zumzi-chat-messenger","children":[{"type":"text","value":"Zumzi Video Conferencing App (mesibo api backend)","position":{"start":{"line":37,"column":6,"offset":1217},"end":{"line":37,"column":55,"offset":1266},"indent":[]}}],"position":{"start":{"line":37,"column":5,"offset":1216},"end":{"line":37,"column":104,"offset":1315},"indent":[]}}],"position":{"start":{"line":37,"column":5,"offset":1216},"end":{"line":37,"column":104,"offset":1315},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1212},"end":{"line":37,"column":104,"offset":1315},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":563},"end":{"line":37,"column":104,"offset":1315},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Core Concepts","position":{"start":{"line":39,"column":3,"offset":1319},"end":{"line":39,"column":16,"offset":1332},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1317},"end":{"line":39,"column":16,"offset":1332},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"index","position":{"start":{"line":41,"column":3,"offset":1336},"end":{"line":41,"column":8,"offset":1341},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1334},"end":{"line":41,"column":8,"offset":1341},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This appendix is a non-exhaustive list of new syntactic features and methods that were added to JavaScript in ES6. These features are the most commonly used and most helpful.","position":{"start":{"line":43,"column":1,"offset":1343},"end":{"line":43,"column":175,"offset":1517},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1343},"end":{"line":43,"column":175,"offset":1517},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"While this appendix doesn't cover ES6 classes, we go over the basics while learning about components in the book. In addition, this appendix doesn't include descriptions of some larger new features like promises and generators. If you'd like more info on those or on any topic below, we encourage you to reference the ","position":{"start":{"line":45,"column":1,"offset":1519},"end":{"line":45,"column":319,"offset":1837},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/","children":[{"type":"text","value":"Mozilla Developer Network's website","position":{"start":{"line":45,"column":320,"offset":1838},"end":{"line":45,"column":355,"offset":1873},"indent":[]}}],"position":{"start":{"line":45,"column":319,"offset":1837},"end":{"line":45,"column":388,"offset":1906},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":45,"column":388,"offset":1906},"end":{"line":45,"column":389,"offset":1907},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":45,"column":389,"offset":1907},"end":{"line":45,"column":391,"offset":1909},"indent":[]}},{"type":"text","value":"MDN","position":{"start":{"line":45,"column":391,"offset":1909},"end":{"line":45,"column":394,"offset":1912},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":45,"column":394,"offset":1912},"end":{"line":45,"column":396,"offset":1914},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":45,"column":396,"offset":1914},"end":{"line":45,"column":397,"offset":1915},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1519},"end":{"line":45,"column":397,"offset":1915},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Prefer ","position":{"start":{"line":47,"column":4,"offset":1920},"end":{"line":47,"column":11,"offset":1927},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":47,"column":11,"offset":1927},"end":{"line":47,"column":18,"offset":1934},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":47,"column":18,"offset":1934},"end":{"line":47,"column":23,"offset":1939},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":47,"column":23,"offset":1939},"end":{"line":47,"column":28,"offset":1944},"indent":[]}},{"type":"text","value":" over ","position":{"start":{"line":47,"column":28,"offset":1944},"end":{"line":47,"column":34,"offset":1950},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":47,"column":34,"offset":1950},"end":{"line":47,"column":39,"offset":1955},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1917},"end":{"line":47,"column":39,"offset":1955},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you've worked with ES5 JavaScript before, you're likely used to seeing variables declared with ","position":{"start":{"line":49,"column":1,"offset":1957},"end":{"line":49,"column":99,"offset":2055},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":49,"column":99,"offset":2055},"end":{"line":49,"column":104,"offset":2060},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":49,"column":104,"offset":2060},"end":{"line":49,"column":105,"offset":2061},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1957},"end":{"line":49,"column":105,"offset":2061},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"ar myVariable = 5;","position":{"start":{"line":51,"column":1,"offset":2063},"end":{"line":53,"column":4,"offset":2091},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Both the ","position":{"start":{"line":55,"column":1,"offset":2093},"end":{"line":55,"column":10,"offset":2102},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":55,"column":10,"offset":2102},"end":{"line":55,"column":17,"offset":2109},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":55,"column":17,"offset":2109},"end":{"line":55,"column":22,"offset":2114},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":55,"column":22,"offset":2114},"end":{"line":55,"column":27,"offset":2119},"indent":[]}},{"type":"text","value":" statements also declare variables. They were introduced in ES6.","position":{"start":{"line":55,"column":27,"offset":2119},"end":{"line":55,"column":91,"offset":2183},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":2093},"end":{"line":55,"column":91,"offset":2183},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use ","position":{"start":{"line":57,"column":1,"offset":2185},"end":{"line":57,"column":5,"offset":2189},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":57,"column":5,"offset":2189},"end":{"line":57,"column":12,"offset":2196},"indent":[]}},{"type":"text","value":" in cases where a variable is never re-assigned. Using ","position":{"start":{"line":57,"column":12,"offset":2196},"end":{"line":57,"column":67,"offset":2251},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":57,"column":67,"offset":2251},"end":{"line":57,"column":74,"offset":2258},"indent":[]}},{"type":"text","value":" makes this clear to whoever is reading your code. It refers to the \"constant\" state of the variable in the context it is defined within.","position":{"start":{"line":57,"column":74,"offset":2258},"end":{"line":57,"column":211,"offset":2395},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":2185},"end":{"line":57,"column":211,"offset":2395},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If the variable will be re-assigned, use ","position":{"start":{"line":59,"column":1,"offset":2397},"end":{"line":59,"column":42,"offset":2438},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":59,"column":42,"offset":2438},"end":{"line":59,"column":47,"offset":2443},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":59,"column":47,"offset":2443},"end":{"line":59,"column":48,"offset":2444},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":2397},"end":{"line":59,"column":48,"offset":2444},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We encourage the use of ","position":{"start":{"line":61,"column":1,"offset":2446},"end":{"line":61,"column":25,"offset":2470},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":61,"column":25,"offset":2470},"end":{"line":61,"column":32,"offset":2477},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":61,"column":32,"offset":2477},"end":{"line":61,"column":37,"offset":2482},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":61,"column":37,"offset":2482},"end":{"line":61,"column":42,"offset":2487},"indent":[]}},{"type":"text","value":" instead of ","position":{"start":{"line":61,"column":42,"offset":2487},"end":{"line":61,"column":54,"offset":2499},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":61,"column":54,"offset":2499},"end":{"line":61,"column":59,"offset":2504},"indent":[]}},{"type":"text","value":". In addition to the restriction introduced by ","position":{"start":{"line":61,"column":59,"offset":2504},"end":{"line":61,"column":106,"offset":2551},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":61,"column":106,"offset":2551},"end":{"line":61,"column":113,"offset":2558},"indent":[]}},{"type":"text","value":", both ","position":{"start":{"line":61,"column":113,"offset":2558},"end":{"line":61,"column":120,"offset":2565},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":61,"column":120,"offset":2565},"end":{"line":61,"column":127,"offset":2572},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":61,"column":127,"offset":2572},"end":{"line":61,"column":132,"offset":2577},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":61,"column":132,"offset":2577},"end":{"line":61,"column":137,"offset":2582},"indent":[]}},{"type":"text","value":" are ","position":{"start":{"line":61,"column":137,"offset":2582},"end":{"line":61,"column":142,"offset":2587},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"block scoped","position":{"start":{"line":61,"column":143,"offset":2588},"end":{"line":61,"column":155,"offset":2600},"indent":[]}}],"position":{"start":{"line":61,"column":142,"offset":2587},"end":{"line":61,"column":156,"offset":2601},"indent":[]}},{"type":"text","value":" as opposed to ","position":{"start":{"line":61,"column":156,"offset":2601},"end":{"line":61,"column":171,"offset":2616},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"function scoped","position":{"start":{"line":61,"column":172,"offset":2617},"end":{"line":61,"column":187,"offset":2632},"indent":[]}}],"position":{"start":{"line":61,"column":171,"offset":2616},"end":{"line":61,"column":188,"offset":2633},"indent":[]}},{"type":"text","value":". This scoping can help avoid unexpected bugs.","position":{"start":{"line":61,"column":188,"offset":2633},"end":{"line":61,"column":234,"offset":2679},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":2446},"end":{"line":61,"column":234,"offset":2679},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Arrow functions","position":{"start":{"line":63,"column":4,"offset":2684},"end":{"line":63,"column":19,"offset":2699},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":2681},"end":{"line":63,"column":19,"offset":2699},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are three ways to write arrow function bodies. For the examples below, let's say we have an array of city objects:","position":{"start":{"line":65,"column":1,"offset":2701},"end":{"line":65,"column":121,"offset":2821},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":2701},"end":{"line":65,"column":121,"offset":2821},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"onst cities = [\n  { name: 'Cairo', pop: 7764700 },\n  { name: 'Lagos', pop: 8029200 },\n];","position":{"start":{"line":67,"column":1,"offset":2823},"end":{"line":72,"column":4,"offset":2921},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If we write an arrow function that spans multiple lines, we must use braces to delimit the function body like this:","position":{"start":{"line":74,"column":1,"offset":2923},"end":{"line":74,"column":116,"offset":3038},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":2923},"end":{"line":74,"column":116,"offset":3038},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const formattedPopulations = cities.map((city) => {\n    const popMM = (city.pop / 1000000).toFixed(2);\n    return popMM + ' million';\n});\nconsole.log(formattedPopulations);","position":{"start":{"line":76,"column":1,"offset":3040},"end":{"line":82,"column":4,"offset":3222},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note that we must also explicitly specify a ","position":{"start":{"line":84,"column":1,"offset":3224},"end":{"line":84,"column":45,"offset":3268},"indent":[]}},{"type":"inlineCode","value":"return","position":{"start":{"line":84,"column":45,"offset":3268},"end":{"line":84,"column":53,"offset":3276},"indent":[]}},{"type":"text","value":" for the function.","position":{"start":{"line":84,"column":53,"offset":3276},"end":{"line":84,"column":71,"offset":3294},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":3224},"end":{"line":84,"column":71,"offset":3294},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"However, if we write a function body that is only a single line ","position":{"start":{"line":86,"column":1,"offset":3296},"end":{"line":86,"column":65,"offset":3360},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":86,"column":65,"offset":3360},"end":{"line":86,"column":67,"offset":3362},"indent":[]}},{"type":"text","value":"or single expression","position":{"start":{"line":86,"column":67,"offset":3362},"end":{"line":86,"column":87,"offset":3382},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":86,"column":87,"offset":3382},"end":{"line":86,"column":89,"offset":3384},"indent":[]}},{"type":"text","value":" we can use parentheses to delimit it:","position":{"start":{"line":86,"column":89,"offset":3384},"end":{"line":86,"column":127,"offset":3422},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":3296},"end":{"line":86,"column":127,"offset":3422},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const formattedPopulations2 = cities.map((city) => (city.pop / 1000000).toFixed(2) + ' million');","position":{"start":{"line":88,"column":1,"offset":3424},"end":{"line":90,"column":4,"offset":3531},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Notably, we don't use ","position":{"start":{"line":92,"column":1,"offset":3533},"end":{"line":92,"column":23,"offset":3555},"indent":[]}},{"type":"inlineCode","value":"return","position":{"start":{"line":92,"column":23,"offset":3555},"end":{"line":92,"column":31,"offset":3563},"indent":[]}},{"type":"text","value":" as it's implied.","position":{"start":{"line":92,"column":31,"offset":3563},"end":{"line":92,"column":48,"offset":3580},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":3533},"end":{"line":92,"column":48,"offset":3580},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Furthermore, if your function body is terse you can write it like so:","position":{"start":{"line":94,"column":1,"offset":3582},"end":{"line":94,"column":70,"offset":3651},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":3582},"end":{"line":94,"column":70,"offset":3651},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const pops = cities.map((city) => city.pop);\nconsole.log(pops);","position":{"start":{"line":96,"column":1,"offset":3653},"end":{"line":99,"column":4,"offset":3726},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The terseness of arrow functions is one of two reasons that we use them. Compare the one-liner above to this:","position":{"start":{"line":101,"column":1,"offset":3728},"end":{"line":101,"column":110,"offset":3837},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":3728},"end":{"line":101,"column":110,"offset":3837},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const popsNoArrow = cities.map(function (city) {\n    return city.pop;\n});","position":{"start":{"line":103,"column":1,"offset":3839},"end":{"line":107,"column":4,"offset":3922},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Of greater benefit, though, is how arrow functions bind the ","position":{"start":{"line":109,"column":1,"offset":3924},"end":{"line":109,"column":61,"offset":3984},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":109,"column":61,"offset":3984},"end":{"line":109,"column":67,"offset":3990},"indent":[]}},{"type":"text","value":" object.","position":{"start":{"line":109,"column":67,"offset":3990},"end":{"line":109,"column":75,"offset":3998},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":3924},"end":{"line":109,"column":75,"offset":3998},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The traditional JavaScript function declaration syntax ","position":{"start":{"line":111,"column":1,"offset":4000},"end":{"line":111,"column":56,"offset":4055},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":111,"column":56,"offset":4055},"end":{"line":111,"column":58,"offset":4057},"indent":[]}},{"type":"inlineCode","value":"function () {}","position":{"start":{"line":111,"column":58,"offset":4057},"end":{"line":111,"column":74,"offset":4073},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":111,"column":74,"offset":4073},"end":{"line":111,"column":76,"offset":4075},"indent":[]}},{"type":"text","value":" will bind ","position":{"start":{"line":111,"column":76,"offset":4075},"end":{"line":111,"column":87,"offset":4086},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":111,"column":87,"offset":4086},"end":{"line":111,"column":93,"offset":4092},"indent":[]}},{"type":"text","value":" in anonymous functions to the global object. To illustrate the confusion this causes, consider the following example:","position":{"start":{"line":111,"column":93,"offset":4092},"end":{"line":111,"column":211,"offset":4210},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":4000},"end":{"line":111,"column":211,"offset":4210},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"unction printSong() {\n  console.log(\"Oops - The Global Object\");\n}\n\nconst jukebox = {\n  songs: [\n    {\n      title: \"Wanna Be Startin' Somethin'\",\n      artist: \"Michael Jackson\",\n    },\n    {\n      title: \"Superstar\",\n      artist: \"Madonna\",\n    },\n  ],\n  printSong: function (song) {\n    console.log(song.title + \" - \" + song.artist);\n  },\n  printSongs: function () {\n\n    this.songs.forEach(function(song) {\n\n      this.printSong(song);\n    });\n  },\n}\n\njukebox.printSongs();","position":{"start":{"line":113,"column":1,"offset":4212},"end":{"line":142,"column":4,"offset":4700},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The method ","position":{"start":{"line":144,"column":1,"offset":4702},"end":{"line":144,"column":12,"offset":4713},"indent":[]}},{"type":"inlineCode","value":"printSongs()","position":{"start":{"line":144,"column":12,"offset":4713},"end":{"line":144,"column":26,"offset":4727},"indent":[]}},{"type":"text","value":" iterates over ","position":{"start":{"line":144,"column":26,"offset":4727},"end":{"line":144,"column":41,"offset":4742},"indent":[]}},{"type":"inlineCode","value":"this.songs","position":{"start":{"line":144,"column":41,"offset":4742},"end":{"line":144,"column":53,"offset":4754},"indent":[]}},{"type":"text","value":" with ","position":{"start":{"line":144,"column":53,"offset":4754},"end":{"line":144,"column":59,"offset":4760},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":144,"column":59,"offset":4760},"end":{"line":144,"column":70,"offset":4771},"indent":[]}},{"type":"text","value":". In this context, ","position":{"start":{"line":144,"column":70,"offset":4771},"end":{"line":144,"column":89,"offset":4790},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":144,"column":89,"offset":4790},"end":{"line":144,"column":95,"offset":4796},"indent":[]}},{"type":"text","value":" is bound to the object ","position":{"start":{"line":144,"column":95,"offset":4796},"end":{"line":144,"column":119,"offset":4820},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":144,"column":119,"offset":4820},"end":{"line":144,"column":121,"offset":4822},"indent":[]}},{"type":"inlineCode","value":"jukebox","position":{"start":{"line":144,"column":121,"offset":4822},"end":{"line":144,"column":130,"offset":4831},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":144,"column":130,"offset":4831},"end":{"line":144,"column":132,"offset":4833},"indent":[]}},{"type":"text","value":" as expected. However, the anonymous function passed to ","position":{"start":{"line":144,"column":132,"offset":4833},"end":{"line":144,"column":188,"offset":4889},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":144,"column":188,"offset":4889},"end":{"line":144,"column":199,"offset":4900},"indent":[]}},{"type":"text","value":" binds its internal ","position":{"start":{"line":144,"column":199,"offset":4900},"end":{"line":144,"column":219,"offset":4920},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":144,"column":219,"offset":4920},"end":{"line":144,"column":225,"offset":4926},"indent":[]}},{"type":"text","value":" to the global object. As such, ","position":{"start":{"line":144,"column":225,"offset":4926},"end":{"line":144,"column":257,"offset":4958},"indent":[]}},{"type":"inlineCode","value":"this.printSong(song)","position":{"start":{"line":144,"column":257,"offset":4958},"end":{"line":144,"column":279,"offset":4980},"indent":[]}},{"type":"text","value":" calls the function declared at the top of the example, ","position":{"start":{"line":144,"column":279,"offset":4980},"end":{"line":144,"column":335,"offset":5036},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":144,"column":336,"offset":5037},"end":{"line":144,"column":339,"offset":5040},"indent":[]}}],"position":{"start":{"line":144,"column":335,"offset":5036},"end":{"line":144,"column":340,"offset":5041},"indent":[]}},{"type":"text","value":" the method on ","position":{"start":{"line":144,"column":340,"offset":5041},"end":{"line":144,"column":355,"offset":5056},"indent":[]}},{"type":"inlineCode","value":"jukebox","position":{"start":{"line":144,"column":355,"offset":5056},"end":{"line":144,"column":364,"offset":5065},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":144,"column":364,"offset":5065},"end":{"line":144,"column":365,"offset":5066},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":4702},"end":{"line":144,"column":365,"offset":5066},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"JavaScript developers have traditionally used workarounds for this behavior, but arrow functions solve the problem by ","position":{"start":{"line":146,"column":1,"offset":5068},"end":{"line":146,"column":119,"offset":5186},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"capturing the ","position":{"start":{"line":146,"column":121,"offset":5188},"end":{"line":146,"column":135,"offset":5202},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":146,"column":135,"offset":5202},"end":{"line":146,"column":141,"offset":5208},"indent":[]}},{"type":"text","value":" value of the enclosing context","position":{"start":{"line":146,"column":141,"offset":5208},"end":{"line":146,"column":172,"offset":5239},"indent":[]}}],"position":{"start":{"line":146,"column":119,"offset":5186},"end":{"line":146,"column":174,"offset":5241},"indent":[]}},{"type":"text","value":". Using an arrow function for ","position":{"start":{"line":146,"column":174,"offset":5241},"end":{"line":146,"column":204,"offset":5271},"indent":[]}},{"type":"inlineCode","value":"printSongs()","position":{"start":{"line":146,"column":204,"offset":5271},"end":{"line":146,"column":218,"offset":5285},"indent":[]}},{"type":"text","value":" has the expected result:","position":{"start":{"line":146,"column":218,"offset":5285},"end":{"line":146,"column":243,"offset":5310},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":5068},"end":{"line":146,"column":243,"offset":5310},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"  printSongs: function () {\n    this.songs.forEach((song) => {\n\n      this.printSong(song);\n    });\n  },\n}\n\njukebox.printSongs();","position":{"start":{"line":148,"column":1,"offset":5312},"end":{"line":158,"column":4,"offset":5451},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For this reason, throughout the book we use arrow functions for all anonymous functions.","position":{"start":{"line":160,"column":1,"offset":5453},"end":{"line":160,"column":89,"offset":5541},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":5453},"end":{"line":160,"column":89,"offset":5541},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Modules","position":{"start":{"line":162,"column":4,"offset":5546},"end":{"line":162,"column":11,"offset":5553},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":5543},"end":{"line":162,"column":11,"offset":5553},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"ES6 formally supports modules using the ","position":{"start":{"line":164,"column":1,"offset":5555},"end":{"line":164,"column":41,"offset":5595},"indent":[]}},{"type":"inlineCode","value":"import","position":{"start":{"line":164,"column":41,"offset":5595},"end":{"line":164,"column":49,"offset":5603},"indent":[]}},{"type":"text","value":"/","position":{"start":{"line":164,"column":49,"offset":5603},"end":{"line":164,"column":50,"offset":5604},"indent":[]}},{"type":"inlineCode","value":"export","position":{"start":{"line":164,"column":50,"offset":5604},"end":{"line":164,"column":58,"offset":5612},"indent":[]}},{"type":"text","value":" syntax.","position":{"start":{"line":164,"column":58,"offset":5612},"end":{"line":164,"column":66,"offset":5620},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":5555},"end":{"line":164,"column":66,"offset":5620},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Named exports","position":{"start":{"line":166,"column":3,"offset":5624},"end":{"line":166,"column":16,"offset":5637},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":5622},"end":{"line":166,"column":18,"offset":5639},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":5622},"end":{"line":166,"column":18,"offset":5639},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Inside any file, you can use ","position":{"start":{"line":168,"column":1,"offset":5641},"end":{"line":168,"column":30,"offset":5670},"indent":[]}},{"type":"inlineCode","value":"export","position":{"start":{"line":168,"column":30,"offset":5670},"end":{"line":168,"column":38,"offset":5678},"indent":[]}},{"type":"text","value":" to specify a variable the module should expose. Here's an example of a file that exports two functions:","position":{"start":{"line":168,"column":38,"offset":5678},"end":{"line":168,"column":142,"offset":5782},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":5641},"end":{"line":168,"column":142,"offset":5782},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"export const sayHi = () => console.log('Hi!');\nexport const sayBye = () => console.log('Bye!');\n\nconst saySomething = () => console.log('Something!');","position":{"start":{"line":170,"column":1,"offset":5784},"end":{"line":175,"column":4,"offset":5944},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now, anywhere we wanted to use these functions we could use ","position":{"start":{"line":177,"column":1,"offset":5946},"end":{"line":177,"column":61,"offset":6006},"indent":[]}},{"type":"inlineCode","value":"import","position":{"start":{"line":177,"column":61,"offset":6006},"end":{"line":177,"column":69,"offset":6014},"indent":[]}},{"type":"text","value":". We need to specify which functions we want to import. A common way of doing this is using ES6's destructuring assignment syntax to list them out like this:","position":{"start":{"line":177,"column":69,"offset":6014},"end":{"line":177,"column":226,"offset":6171},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":5946},"end":{"line":177,"column":226,"offset":6171},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import { sayHi, sayBye } from './greetings';\n\nsayHi();\nsayBye();","position":{"start":{"line":179,"column":1,"offset":6173},"end":{"line":184,"column":4,"offset":6247},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Importantly, the function that was ","position":{"start":{"line":186,"column":1,"offset":6249},"end":{"line":186,"column":36,"offset":6284},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":186,"column":37,"offset":6285},"end":{"line":186,"column":40,"offset":6288},"indent":[]}}],"position":{"start":{"line":186,"column":36,"offset":6284},"end":{"line":186,"column":41,"offset":6289},"indent":[]}},{"type":"text","value":" exported ","position":{"start":{"line":186,"column":41,"offset":6289},"end":{"line":186,"column":51,"offset":6299},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":186,"column":51,"offset":6299},"end":{"line":186,"column":53,"offset":6301},"indent":[]}},{"type":"inlineCode","value":"saySomething","position":{"start":{"line":186,"column":53,"offset":6301},"end":{"line":186,"column":67,"offset":6315},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":186,"column":67,"offset":6315},"end":{"line":186,"column":69,"offset":6317},"indent":[]}},{"type":"text","value":" is unavailable outside of the module.","position":{"start":{"line":186,"column":69,"offset":6317},"end":{"line":186,"column":107,"offset":6355},"indent":[]}}],"position":{"start":{"line":186,"column":1,"offset":6249},"end":{"line":186,"column":107,"offset":6355},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Also note that we supply a ","position":{"start":{"line":188,"column":1,"offset":6357},"end":{"line":188,"column":28,"offset":6384},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"relative path","position":{"start":{"line":188,"column":30,"offset":6386},"end":{"line":188,"column":43,"offset":6399},"indent":[]}}],"position":{"start":{"line":188,"column":28,"offset":6384},"end":{"line":188,"column":45,"offset":6401},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":188,"column":45,"offset":6401},"end":{"line":188,"column":49,"offset":6405},"indent":[]}},{"type":"inlineCode","value":"from","position":{"start":{"line":188,"column":49,"offset":6405},"end":{"line":188,"column":55,"offset":6411},"indent":[]}},{"type":"text","value":", indicating that the ES6 module is a local file as opposed to an npm package.","position":{"start":{"line":188,"column":55,"offset":6411},"end":{"line":188,"column":133,"offset":6489},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":6357},"end":{"line":188,"column":133,"offset":6489},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Instead of inserting an ","position":{"start":{"line":190,"column":1,"offset":6491},"end":{"line":190,"column":25,"offset":6515},"indent":[]}},{"type":"inlineCode","value":"export","position":{"start":{"line":190,"column":25,"offset":6515},"end":{"line":190,"column":33,"offset":6523},"indent":[]}},{"type":"text","value":" before each variable you'd like to export, you can use this syntax to list off all the exposed variables in one area:","position":{"start":{"line":190,"column":33,"offset":6523},"end":{"line":190,"column":151,"offset":6641},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":6491},"end":{"line":190,"column":151,"offset":6641},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const sayHi = () => console.log('Hi!');\nconst sayBye = () => console.log('Bye!');\n\nconst saySomething = () => console.log('Something!');\n\nexport { sayHi, sayBye };","position":{"start":{"line":192,"column":1,"offset":6643},"end":{"line":199,"column":4,"offset":6816},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We can also specify that we'd like to import all of a module's functionality underneath a given namespace with the ","position":{"start":{"line":201,"column":1,"offset":6818},"end":{"line":201,"column":116,"offset":6933},"indent":[]}},{"type":"inlineCode","value":"import * as <Namespace>","position":{"start":{"line":201,"column":116,"offset":6933},"end":{"line":201,"column":141,"offset":6958},"indent":[]}},{"type":"text","value":" syntax:","position":{"start":{"line":201,"column":141,"offset":6958},"end":{"line":201,"column":149,"offset":6966},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":6818},"end":{"line":201,"column":149,"offset":6966},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import * as Greetings from './greetings';\n\nGreetings.sayHi();\n\nGreetings.sayBye();\n\nGreetings.saySomething();","position":{"start":{"line":203,"column":1,"offset":6968},"end":{"line":211,"column":4,"offset":7087},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Default export","position":{"start":{"line":213,"column":3,"offset":7091},"end":{"line":213,"column":17,"offset":7105},"indent":[]}}],"position":{"start":{"line":213,"column":1,"offset":7089},"end":{"line":213,"column":19,"offset":7107},"indent":[]}}],"position":{"start":{"line":213,"column":1,"offset":7089},"end":{"line":213,"column":19,"offset":7107},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The other type of export is a default export. A module can only contain one default export:","position":{"start":{"line":215,"column":1,"offset":7109},"end":{"line":215,"column":92,"offset":7200},"indent":[]}}],"position":{"start":{"line":215,"column":1,"offset":7109},"end":{"line":215,"column":92,"offset":7200},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const sayHi = () => console.log('Hi!');\nconst sayBye = () => console.log('Bye!');\n\nconst saySomething = () => console.log('Something!');\n\nconst Greetings = { sayHi, sayBye };\n\nexport default Greetings;","position":{"start":{"line":217,"column":1,"offset":7202},"end":{"line":226,"column":4,"offset":7413},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is a common pattern for libraries. It means you can easily import the library wholesale without specifying what individual functions you want:","position":{"start":{"line":228,"column":1,"offset":7415},"end":{"line":228,"column":148,"offset":7562},"indent":[]}}],"position":{"start":{"line":228,"column":1,"offset":7415},"end":{"line":228,"column":148,"offset":7562},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import Greetings from './greetings';\n\nGreetings.sayHi();\nGreetings.sayBye();","position":{"start":{"line":230,"column":1,"offset":7564},"end":{"line":235,"column":4,"offset":7650},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It's not uncommon for a module to use a mix of both named exports and default exports. For instance, with ","position":{"start":{"line":237,"column":1,"offset":7652},"end":{"line":237,"column":107,"offset":7758},"indent":[]}},{"type":"inlineCode","value":"react-dom","position":{"start":{"line":237,"column":107,"offset":7758},"end":{"line":237,"column":118,"offset":7769},"indent":[]}},{"type":"text","value":", you can import ","position":{"start":{"line":237,"column":118,"offset":7769},"end":{"line":237,"column":135,"offset":7786},"indent":[]}},{"type":"inlineCode","value":"ReactDOM","position":{"start":{"line":237,"column":135,"offset":7786},"end":{"line":237,"column":145,"offset":7796},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":237,"column":145,"offset":7796},"end":{"line":237,"column":146,"offset":7797},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":237,"column":146,"offset":7797},"end":{"line":237,"column":148,"offset":7799},"indent":[]}},{"type":"text","value":"a default export","position":{"start":{"line":237,"column":148,"offset":7799},"end":{"line":237,"column":164,"offset":7815},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":237,"column":164,"offset":7815},"end":{"line":237,"column":166,"offset":7817},"indent":[]}},{"type":"text","value":" like this:","position":{"start":{"line":237,"column":166,"offset":7817},"end":{"line":237,"column":177,"offset":7828},"indent":[]}}],"position":{"start":{"line":237,"column":1,"offset":7652},"end":{"line":237,"column":177,"offset":7828},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import ReactDOM from 'react-dom';\n\nReactDOM.render();","position":{"start":{"line":239,"column":1,"offset":7830},"end":{"line":243,"column":4,"offset":7893},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Or, if you're only going to use the ","position":{"start":{"line":245,"column":1,"offset":7895},"end":{"line":245,"column":37,"offset":7931},"indent":[]}},{"type":"inlineCode","value":"render()","position":{"start":{"line":245,"column":37,"offset":7931},"end":{"line":245,"column":47,"offset":7941},"indent":[]}},{"type":"text","value":" function, you can import the named ","position":{"start":{"line":245,"column":47,"offset":7941},"end":{"line":245,"column":83,"offset":7977},"indent":[]}},{"type":"inlineCode","value":"render()","position":{"start":{"line":245,"column":83,"offset":7977},"end":{"line":245,"column":93,"offset":7987},"indent":[]}},{"type":"text","value":" function like this:","position":{"start":{"line":245,"column":93,"offset":7987},"end":{"line":245,"column":113,"offset":8007},"indent":[]}}],"position":{"start":{"line":245,"column":1,"offset":7895},"end":{"line":245,"column":113,"offset":8007},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import { render } from 'react-dom';\n\nrender();","position":{"start":{"line":247,"column":1,"offset":8009},"end":{"line":251,"column":4,"offset":8065},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To achieve this flexibility, the export implementation for ","position":{"start":{"line":253,"column":1,"offset":8067},"end":{"line":253,"column":60,"offset":8126},"indent":[]}},{"type":"inlineCode","value":"react-dom","position":{"start":{"line":253,"column":60,"offset":8126},"end":{"line":253,"column":71,"offset":8137},"indent":[]}},{"type":"text","value":" looks something like this:","position":{"start":{"line":253,"column":71,"offset":8137},"end":{"line":253,"column":98,"offset":8164},"indent":[]}}],"position":{"start":{"line":253,"column":1,"offset":8067},"end":{"line":253,"column":98,"offset":8164},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"export const render = (component, target) => {};\n\nconst ReactDOM = {\n    render\n};\n\nexport default ReactDOM;","position":{"start":{"line":255,"column":1,"offset":8166},"end":{"line":263,"column":4,"offset":8284},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you want to play around with the module syntax, check out the folder ","position":{"start":{"line":265,"column":1,"offset":8286},"end":{"line":265,"column":73,"offset":8358},"indent":[]}},{"type":"inlineCode","value":"code/webpack/es6-modules","position":{"start":{"line":265,"column":73,"offset":8358},"end":{"line":265,"column":99,"offset":8384},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":265,"column":99,"offset":8384},"end":{"line":265,"column":100,"offset":8385},"indent":[]}}],"position":{"start":{"line":265,"column":1,"offset":8286},"end":{"line":265,"column":100,"offset":8385},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For more reading on ES6 modules, see this article from Mozilla: \"","position":{"start":{"line":267,"column":1,"offset":8387},"end":{"line":267,"column":66,"offset":8452},"indent":[]}},{"type":"link","title":null,"url":"https://hacks.mozilla.org/2015/08/es6-in-depth-modules/","children":[{"type":"text","value":"ES6 in Depth: Modules","position":{"start":{"line":267,"column":67,"offset":8453},"end":{"line":267,"column":88,"offset":8474},"indent":[]}}],"position":{"start":{"line":267,"column":66,"offset":8452},"end":{"line":267,"column":146,"offset":8532},"indent":[]}},{"type":"text","value":"\".","position":{"start":{"line":267,"column":146,"offset":8532},"end":{"line":267,"column":148,"offset":8534},"indent":[]}}],"position":{"start":{"line":267,"column":1,"offset":8387},"end":{"line":267,"column":148,"offset":8534},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":269,"column":4,"offset":8539},"end":{"line":269,"column":21,"offset":8556},"indent":[]}}],"position":{"start":{"line":269,"column":1,"offset":8536},"end":{"line":269,"column":21,"offset":8556},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We use ","position":{"start":{"line":271,"column":1,"offset":8558},"end":{"line":271,"column":8,"offset":8565},"indent":[]}},{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":271,"column":8,"offset":8565},"end":{"line":271,"column":25,"offset":8582},"indent":[]}},{"type":"text","value":" often throughout the book. We use it in areas where we want to create a modified version of an existing object.","position":{"start":{"line":271,"column":25,"offset":8582},"end":{"line":271,"column":137,"offset":8694},"indent":[]}}],"position":{"start":{"line":271,"column":1,"offset":8558},"end":{"line":271,"column":137,"offset":8694},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":273,"column":1,"offset":8696},"end":{"line":273,"column":18,"offset":8713},"indent":[]}},{"type":"text","value":" accepts any number of objects as arguments. When the function receives two arguments, it ","position":{"start":{"line":273,"column":18,"offset":8713},"end":{"line":273,"column":108,"offset":8803},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"copies","position":{"start":{"line":273,"column":109,"offset":8804},"end":{"line":273,"column":115,"offset":8810},"indent":[]}}],"position":{"start":{"line":273,"column":108,"offset":8803},"end":{"line":273,"column":116,"offset":8811},"indent":[]}},{"type":"text","value":" the properties of the second object onto the first, like so:","position":{"start":{"line":273,"column":116,"offset":8811},"end":{"line":273,"column":177,"offset":8872},"indent":[]}}],"position":{"start":{"line":273,"column":1,"offset":8696},"end":{"line":273,"column":177,"offset":8872},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"onst coffee = { };\nconst noCream = { cream: false };\nconst noMilk = { milk: false };\nObject.assign(coffee, noCream);","position":{"start":{"line":275,"column":1,"offset":8874},"end":{"line":280,"column":4,"offset":9000},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It is idiomatic to pass in three arguments to ","position":{"start":{"line":282,"column":1,"offset":9002},"end":{"line":282,"column":47,"offset":9048},"indent":[]}},{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":282,"column":47,"offset":9048},"end":{"line":282,"column":64,"offset":9065},"indent":[]}},{"type":"text","value":". The first argument is a new JavaScript object, the one that ","position":{"start":{"line":282,"column":64,"offset":9065},"end":{"line":282,"column":126,"offset":9127},"indent":[]}},{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":282,"column":126,"offset":9127},"end":{"line":282,"column":143,"offset":9144},"indent":[]}},{"type":"text","value":" will ultimately return. The second is the object whose properties we'd like to build off of. The last is the changes we'd like to apply:","position":{"start":{"line":282,"column":143,"offset":9144},"end":{"line":282,"column":280,"offset":9281},"indent":[]}}],"position":{"start":{"line":282,"column":1,"offset":9002},"end":{"line":282,"column":280,"offset":9281},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const coffeeWithMilk = Object.assign({}, coffee, { milk: true });","position":{"start":{"line":284,"column":1,"offset":9283},"end":{"line":286,"column":4,"offset":9358},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":288,"column":1,"offset":9360},"end":{"line":288,"column":18,"offset":9377},"indent":[]}},{"type":"text","value":" is a handy method for working with \"immutable\" JavaScript objects.","position":{"start":{"line":288,"column":18,"offset":9377},"end":{"line":288,"column":85,"offset":9444},"indent":[]}}],"position":{"start":{"line":288,"column":1,"offset":9360},"end":{"line":288,"column":85,"offset":9444},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Template literals","position":{"start":{"line":290,"column":4,"offset":9449},"end":{"line":290,"column":21,"offset":9466},"indent":[]}}],"position":{"start":{"line":290,"column":1,"offset":9446},"end":{"line":290,"column":21,"offset":9466},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ES5 JavaScript, you'd interpolate variables into strings like this:","position":{"start":{"line":292,"column":1,"offset":9468},"end":{"line":292,"column":71,"offset":9538},"indent":[]}}],"position":{"start":{"line":292,"column":1,"offset":9468},"end":{"line":292,"column":71,"offset":9538},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"var greeting = 'Hello, ' + user + '! It is ' + degF + ' degrees outside.';","position":{"start":{"line":294,"column":1,"offset":9540},"end":{"line":296,"column":4,"offset":9624},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"With ES6 template literals, we can create the same string like this:","position":{"start":{"line":298,"column":1,"offset":9626},"end":{"line":298,"column":69,"offset":9694},"indent":[]}}],"position":{"start":{"line":298,"column":1,"offset":9626},"end":{"line":298,"column":69,"offset":9694},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const greeting = `Hello, ${user}! It is ${degF} degrees outside.`;","position":{"start":{"line":300,"column":1,"offset":9696},"end":{"line":302,"column":4,"offset":9772},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"The spread operator ","position":{"start":{"line":304,"column":4,"offset":9777},"end":{"line":304,"column":24,"offset":9797},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":304,"column":24,"offset":9797},"end":{"line":304,"column":26,"offset":9799},"indent":[]}},{"type":"inlineCode","value":"...","position":{"start":{"line":304,"column":26,"offset":9799},"end":{"line":304,"column":31,"offset":9804},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":304,"column":31,"offset":9804},"end":{"line":304,"column":33,"offset":9806},"indent":[]}}],"position":{"start":{"line":304,"column":1,"offset":9774},"end":{"line":304,"column":33,"offset":9806},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In arrays, the ellipsis ","position":{"start":{"line":306,"column":1,"offset":9808},"end":{"line":306,"column":25,"offset":9832},"indent":[]}},{"type":"inlineCode","value":"...","position":{"start":{"line":306,"column":25,"offset":9832},"end":{"line":306,"column":30,"offset":9837},"indent":[]}},{"type":"text","value":" operator will ","position":{"start":{"line":306,"column":30,"offset":9837},"end":{"line":306,"column":45,"offset":9852},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"expand","position":{"start":{"line":306,"column":46,"offset":9853},"end":{"line":306,"column":52,"offset":9859},"indent":[]}}],"position":{"start":{"line":306,"column":45,"offset":9852},"end":{"line":306,"column":53,"offset":9860},"indent":[]}},{"type":"text","value":" the array that follows into the parent array. The spread operator enables us to succinctly construct new arrays as a composite of existing arrays.","position":{"start":{"line":306,"column":53,"offset":9860},"end":{"line":306,"column":200,"offset":10007},"indent":[]}}],"position":{"start":{"line":306,"column":1,"offset":9808},"end":{"line":306,"column":200,"offset":10007},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is an example:","position":{"start":{"line":308,"column":1,"offset":10009},"end":{"line":308,"column":20,"offset":10028},"indent":[]}}],"position":{"start":{"line":308,"column":1,"offset":10009},"end":{"line":308,"column":20,"offset":10028},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"onst a = [ 1, 2, 3 ];\nconst b = [ 4, 5, 6 ];\nconst c = [ ...a, ...b, 7, 8, 9 ];\n\nconsole.log(c);","position":{"start":{"line":310,"column":1,"offset":10030},"end":{"line":316,"column":4,"offset":10136},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Notice how this is different than if we wrote:","position":{"start":{"line":318,"column":1,"offset":10138},"end":{"line":318,"column":47,"offset":10184},"indent":[]}}],"position":{"start":{"line":318,"column":1,"offset":10138},"end":{"line":318,"column":47,"offset":10184},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const d = [a, b, 7, 8, 9];\nconsole.log(d);","position":{"start":{"line":320,"column":1,"offset":10186},"end":{"line":323,"column":4,"offset":10238},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Enhanced object literals","position":{"start":{"line":325,"column":4,"offset":10243},"end":{"line":325,"column":28,"offset":10267},"indent":[]}}],"position":{"start":{"line":325,"column":1,"offset":10240},"end":{"line":325,"column":28,"offset":10267},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ES5, all objects were required to have explicit key and value declarations:","position":{"start":{"line":327,"column":1,"offset":10269},"end":{"line":327,"column":79,"offset":10347},"indent":[]}}],"position":{"start":{"line":327,"column":1,"offset":10269},"end":{"line":327,"column":79,"offset":10347},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const explicit = {\n    getState: getState,\n    dispatch: dispatch\n};","position":{"start":{"line":329,"column":1,"offset":10349},"end":{"line":334,"column":4,"offset":10427},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In ES6, you can use this terser syntax whenever the property name and variable name are the same:","position":{"start":{"line":336,"column":1,"offset":10429},"end":{"line":336,"column":98,"offset":10526},"indent":[]}}],"position":{"start":{"line":336,"column":1,"offset":10429},"end":{"line":336,"column":98,"offset":10526},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const implicit = {\n    getState,\n    dispatch\n};","position":{"start":{"line":338,"column":1,"offset":10528},"end":{"line":343,"column":4,"offset":10586},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Lots of open source libraries use this syntax, so it's good to be familiar with it. But whether you use it in your own code is a matter of stylistic preference.","position":{"start":{"line":345,"column":1,"offset":10588},"end":{"line":345,"column":161,"offset":10748},"indent":[]}}],"position":{"start":{"line":345,"column":1,"offset":10588},"end":{"line":345,"column":161,"offset":10748},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Default arguments","position":{"start":{"line":347,"column":4,"offset":10753},"end":{"line":347,"column":21,"offset":10770},"indent":[]}}],"position":{"start":{"line":347,"column":1,"offset":10750},"end":{"line":347,"column":21,"offset":10770},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With ES6, you can specify a default value for an argument in the case that it is ","position":{"start":{"line":349,"column":1,"offset":10772},"end":{"line":349,"column":82,"offset":10853},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":349,"column":82,"offset":10853},"end":{"line":349,"column":93,"offset":10864},"indent":[]}},{"type":"text","value":" when the function is called.","position":{"start":{"line":349,"column":93,"offset":10864},"end":{"line":349,"column":122,"offset":10893},"indent":[]}}],"position":{"start":{"line":349,"column":1,"offset":10772},"end":{"line":349,"column":122,"offset":10893},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This:","position":{"start":{"line":351,"column":1,"offset":10895},"end":{"line":351,"column":6,"offset":10900},"indent":[]}}],"position":{"start":{"line":351,"column":1,"offset":10895},"end":{"line":351,"column":6,"offset":10900},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"unction divide(a, b) {\n\n  const divisor = typeof b === 'undefined' ? 1 : b;\n\n  return a / divisor;\n}","position":{"start":{"line":353,"column":1,"offset":10902},"end":{"line":360,"column":4,"offset":11012},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Can be written as this:","position":{"start":{"line":362,"column":1,"offset":11014},"end":{"line":362,"column":24,"offset":11037},"indent":[]}}],"position":{"start":{"line":362,"column":1,"offset":11014},"end":{"line":362,"column":24,"offset":11037},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"function divide(a, b = 1) {\n    return a / b;\n}","position":{"start":{"line":364,"column":1,"offset":11039},"end":{"line":368,"column":4,"offset":11096},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In both cases, using the function looks like this:","position":{"start":{"line":370,"column":1,"offset":11098},"end":{"line":370,"column":51,"offset":11148},"indent":[]}}],"position":{"start":{"line":370,"column":1,"offset":11098},"end":{"line":370,"column":51,"offset":11148},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"divide(14, 2);\n\ndivide(14, undefined);\n\ndivide(14);","position":{"start":{"line":372,"column":1,"offset":11150},"end":{"line":378,"column":4,"offset":11211},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Whenever the argument ","position":{"start":{"line":380,"column":1,"offset":11213},"end":{"line":380,"column":23,"offset":11235},"indent":[]}},{"type":"inlineCode","value":"b","position":{"start":{"line":380,"column":23,"offset":11235},"end":{"line":380,"column":26,"offset":11238},"indent":[]}},{"type":"text","value":" in the example above is ","position":{"start":{"line":380,"column":26,"offset":11238},"end":{"line":380,"column":51,"offset":11263},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":380,"column":51,"offset":11263},"end":{"line":380,"column":62,"offset":11274},"indent":[]}},{"type":"text","value":", the default argument is used. Note that ","position":{"start":{"line":380,"column":62,"offset":11274},"end":{"line":380,"column":104,"offset":11316},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":380,"column":104,"offset":11316},"end":{"line":380,"column":110,"offset":11322},"indent":[]}},{"type":"text","value":" will not use the default argument:","position":{"start":{"line":380,"column":110,"offset":11322},"end":{"line":380,"column":145,"offset":11357},"indent":[]}}],"position":{"start":{"line":380,"column":1,"offset":11213},"end":{"line":380,"column":145,"offset":11357},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"divide(14, null);","position":{"start":{"line":382,"column":1,"offset":11359},"end":{"line":384,"column":4,"offset":11386},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Destructuring assignments","position":{"start":{"line":386,"column":4,"offset":11391},"end":{"line":386,"column":29,"offset":11416},"indent":[]}}],"position":{"start":{"line":386,"column":1,"offset":11388},"end":{"line":386,"column":29,"offset":11416},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"For arrays","position":{"start":{"line":388,"column":5,"offset":11422},"end":{"line":388,"column":15,"offset":11432},"indent":[]}}],"position":{"start":{"line":388,"column":1,"offset":11418},"end":{"line":388,"column":15,"offset":11432},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ES5, extracting and assigning multiple elements from an array looked like this:","position":{"start":{"line":390,"column":1,"offset":11434},"end":{"line":390,"column":83,"offset":11516},"indent":[]}}],"position":{"start":{"line":390,"column":1,"offset":11434},"end":{"line":390,"column":83,"offset":11516},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"ar fruits = [ 'apples', 'bananas', 'oranges' ];\nvar fruit1 = fruits[0];\nvar fruit2 = fruits[1];","position":{"start":{"line":392,"column":1,"offset":11518},"end":{"line":396,"column":4,"offset":11623},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In ES6, we can use the destructuring syntax to accomplish the same task like this:","position":{"start":{"line":398,"column":1,"offset":11625},"end":{"line":398,"column":83,"offset":11707},"indent":[]}}],"position":{"start":{"line":398,"column":1,"offset":11625},"end":{"line":398,"column":83,"offset":11707},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const [veg1, veg2] = ['asparagus', 'broccoli', 'onion'];\nconsole.log(veg1);\nconsole.log(veg2);","position":{"start":{"line":400,"column":1,"offset":11709},"end":{"line":404,"column":4,"offset":11813},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The variables in the array on the left are \"matched\" and assigned to the corresponding elements in the array on the right. Note that ","position":{"start":{"line":406,"column":1,"offset":11815},"end":{"line":406,"column":134,"offset":11948},"indent":[]}},{"type":"inlineCode","value":"'onion'","position":{"start":{"line":406,"column":134,"offset":11948},"end":{"line":406,"column":143,"offset":11957},"indent":[]}},{"type":"text","value":" is ignored and has no variable bound to it.","position":{"start":{"line":406,"column":143,"offset":11957},"end":{"line":406,"column":187,"offset":12001},"indent":[]}}],"position":{"start":{"line":406,"column":1,"offset":11815},"end":{"line":406,"column":187,"offset":12001},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"For objects","position":{"start":{"line":408,"column":5,"offset":12007},"end":{"line":408,"column":16,"offset":12018},"indent":[]}}],"position":{"start":{"line":408,"column":1,"offset":12003},"end":{"line":408,"column":16,"offset":12018},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can do something similar for extracting object properties into variables:","position":{"start":{"line":410,"column":1,"offset":12020},"end":{"line":410,"column":77,"offset":12096},"indent":[]}}],"position":{"start":{"line":410,"column":1,"offset":12020},"end":{"line":410,"column":77,"offset":12096},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const smoothie = {\n    fats: ['avocado', 'peanut butter', 'greek yogurt'],\n    liquids: ['almond milk'],\n    greens: ['spinach'],\n    fruits: ['blueberry', 'banana']\n};\n\nconst { liquids, fruits } = smoothie;\n\nconsole.log(liquids);\nconsole.log(fruits);","position":{"start":{"line":412,"column":1,"offset":12098},"end":{"line":424,"column":4,"offset":12359},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Parameter context matching","position":{"start":{"line":426,"column":5,"offset":12365},"end":{"line":426,"column":31,"offset":12391},"indent":[]}}],"position":{"start":{"line":426,"column":1,"offset":12361},"end":{"line":426,"column":31,"offset":12391},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can use these same principles to bind arguments inside a function to properties of an object supplied as an argument:","position":{"start":{"line":428,"column":1,"offset":12393},"end":{"line":428,"column":121,"offset":12513},"indent":[]}}],"position":{"start":{"line":428,"column":1,"offset":12393},"end":{"line":428,"column":121,"offset":12513},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const containsSpinach = ({ greens }) => {\n    if (greens.find((g) => g === 'spinach')) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\ncontainsSpinach(smoothie);","position":{"start":{"line":430,"column":1,"offset":12515},"end":{"line":440,"column":4,"offset":12706},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We do this often with functional React components:","position":{"start":{"line":442,"column":1,"offset":12708},"end":{"line":442,"column":51,"offset":12758},"indent":[]}}],"position":{"start":{"line":442,"column":1,"offset":12708},"end":{"line":442,"column":51,"offset":12758},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const IngredientList = ({ ingredients, onClick }) => (\n    <ul className=\"IngredientList\">\n        {ingredients.map((i) => (\n            <li key={i.id} onClick={() => onClick(i.id)} className=\"item\">\n                {i.name}\n            </li>\n        ))}\n    </ul>\n);","position":{"start":{"line":444,"column":1,"offset":12760},"end":{"line":454,"column":4,"offset":13037},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Here, we use destructuring to extract the props into variables ","position":{"start":{"line":456,"column":1,"offset":13039},"end":{"line":456,"column":64,"offset":13102},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":456,"column":64,"offset":13102},"end":{"line":456,"column":66,"offset":13104},"indent":[]}},{"type":"inlineCode","value":"ingredients","position":{"start":{"line":456,"column":66,"offset":13104},"end":{"line":456,"column":79,"offset":13117},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":456,"column":79,"offset":13117},"end":{"line":456,"column":84,"offset":13122},"indent":[]}},{"type":"inlineCode","value":"onClick","position":{"start":{"line":456,"column":84,"offset":13122},"end":{"line":456,"column":93,"offset":13131},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":456,"column":93,"offset":13131},"end":{"line":456,"column":95,"offset":13133},"indent":[]}},{"type":"text","value":" that we then use inside the component's function body.","position":{"start":{"line":456,"column":95,"offset":13133},"end":{"line":456,"column":150,"offset":13188},"indent":[]}}],"position":{"start":{"line":456,"column":1,"offset":13039},"end":{"line":456,"column":150,"offset":13188},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":457,"column":1,"offset":13189}}}}