{"version":3,"sources":["webpack:///./src/templates/docs.js"],"names":["Docs","render","child_pages","has_children","root_docs_path","this","props","current_page_url","className","page","pageContext","site","htmlToReact","getPages","pages","Fragment","id","child_page","child_page_idx","key","to","withPrefix","aria-hidden","React","Component"],"mappings":"4TAkBqBA,E,kGACjBC,OAAA,WAAU,IAiBkCC,EAEAC,EAnBnC,OACDC,EAAiB,IAAO,IAAMC,KAAKC,MAAO,oDAAqD,MAAO,KACtGC,EAAmB,IAAO,IAAMF,KAAKC,MAAO,kBAAmB,MAAO,KAC1E,OACI,kBAAC,IAAWD,KAAKC,MACb,yBAAKE,UAAU,eACX,yBAAKA,UAAU,gBACX,kBAAC,IAAD,iBAAcH,KAAKC,MAAnB,CAA0BG,KAAMJ,KAAKC,MAAMI,YAAaC,KAAMN,KAAKC,MAAMI,YAAYC,QACrF,6BAASH,UAAU,kBACf,yBAAKA,UAAU,eACX,4BAAQA,UAAU,eACd,wBAAIA,UAAU,wBAAwB,IAAMH,KAAKC,MAAO,gCAAiC,QAE7F,yBAAKE,UAAU,gBACVI,YAAY,IAAMP,KAAKC,MAAO,mBAAoB,OAClDF,IAAmBG,IAERL,EAAc,IAAUW,YAAS,EAAKP,MAAMI,YAAYI,MAAOP,GAAmB,sBAElFJ,EADc,IAAOD,GACQ,EAE7B,kBAAC,IAAMa,SAAP,KACKZ,GACG,wBAAIa,GAAG,qBAAqBR,UAAU,sBACjC,IAAMN,GAAa,SAACe,EAAYC,GAAb,OAChB,wBAAIC,IAAKD,EAAgBV,UAAU,qBAC/B,kBAAC,IAAD,CAAMY,GAAIC,YAAW,IAAMJ,EAAY,MAAO,OAAQT,UAAU,kBAC3D,IAAMS,EAAY,oBAAqB,MACxC,0BAAMT,UAAU,mBAAmBc,cAAY,oBAY/F,yBAAKN,GAAG,WAAWR,UAAU,YACzB,yBAAKQ,GAAG,kBAAkBR,UAAU,0BAChC,wBAAIA,UAAU,kBAAd,mBACA,yBAAKQ,GAAG,+BAIb,yBAAKA,GAAG,SAASR,UAAU,a,GAhDpBe,IAAMC","file":"component---src-templates-docs-js-bf431cbe6f6b991ffc34.js","sourcesContent":["import React from 'react';\r\nimport _ from 'lodash';\r\nimport { graphql } from 'gatsby';\r\n\r\nimport { Layout } from '../components/index';\r\nimport DocsMenu from '../components/DocsMenu';\r\nimport { htmlToReact, getPages, Link, withPrefix } from '../utils';\r\n\r\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\r\n// any changes to content files are reflected in browser\r\nexport const query = graphql`\r\n    query ($url: String) {\r\n        sitePage(path: { eq: $url }) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nexport default class Docs extends React.Component {\r\n    render() {\r\n        let root_docs_path = _.trim(_.get(this.props, 'pageContext.site.data.doc_sections.root_docs_path', null), '/');\r\n        let current_page_url = _.trim(_.get(this.props, 'pageContext.url', null), '/');\r\n        return (\r\n            <Layout {...this.props}>\r\n                <div className=\"inner outer\">\r\n                    <div className=\"docs-content\">\r\n                        <DocsMenu {...this.props} page={this.props.pageContext} site={this.props.pageContext.site} />\r\n                        <article className=\"post type-docs\">\r\n                            <div className=\"post-inside\">\r\n                                <header className=\"post-header\">\r\n                                    <h1 className=\"post-title line-left\">{_.get(this.props, 'pageContext.frontmatter.title', null)}</h1>\r\n                                </header>\r\n                                <div className=\"post-content\">\r\n                                    {htmlToReact(_.get(this.props, 'pageContext.html', null))}\r\n                                    {root_docs_path !== current_page_url &&\r\n                                        (() => {\r\n                                            let child_pages = _.orderBy(getPages(this.props.pageContext.pages, current_page_url), 'frontmatter.weight');\r\n                                            let child_count = _.size(child_pages);\r\n                                            let has_children = child_count > 0 ? true : false;\r\n                                            return (\r\n                                                <React.Fragment>\r\n                                                    {has_children && (\r\n                                                        <ul id=\"docs-section-items\" className=\"docs-section-items\">\r\n                                                            {_.map(child_pages, (child_page, child_page_idx) => (\r\n                                                                <li key={child_page_idx} className=\"docs-section-item\">\r\n                                                                    <Link to={withPrefix(_.get(child_page, 'url', null))} className=\"docs-item-link\">\r\n                                                                        {_.get(child_page, 'frontmatter.title', null)}\r\n                                                                        <span className=\"icon-angle-right\" aria-hidden=\"true\" />\r\n                                                                    </Link>\r\n                                                                </li>\r\n                                                            ))}\r\n                                                        </ul>\r\n                                                    )}\r\n                                                </React.Fragment>\r\n                                            );\r\n                                        })()}\r\n                                </div>\r\n                            </div>\r\n                        </article>\r\n                        <nav id=\"page-nav\" className=\"page-nav\">\r\n                            <div id=\"page-nav-inside\" className=\"page-nav-inside sticky\">\r\n                                <h2 className=\"page-nav-title\">Jump to Section</h2>\r\n                                <div id=\"page-nav-link-container\" />\r\n                            </div>\r\n                        </nav>\r\n                    </div>\r\n                           <div id=\"search\" className=\"inner\"></div>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}